services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      # - /var/lib/postgresql/data

  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
      # - /var/lib/data/db

  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   ports:
  #     - 5672:5672
  #     - 15672:15672 #accessing through browser

  # auction-svc:
  #     image: PuzzledSunrise/auction-svc:latest
  #     build: 
  #       context: .
  #       dockerfile: src/AuctionService/Dockerfile
  #     environment:
  #       - ASPNETCORE_ENVIRONMENT=Development
  #       - ASPNETCORE_URLS=http://+:80
  #       - RabbitMq__Host=rabbitmq
  #       - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auctions
  #       - IdentityServiceUrl=http://identity-svc
  #     ports:
  #       - 7001:80
  #     depends_on:
  #       - postgres
  #       - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  auction-svc:
    image: PuzzledSunrise/auction-svc:latest
    build: 
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auctions
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 7001:80
    depends_on:
      rabbitmq:
        condition: service_healthy # BUG: wait for rabbitmq be fully ready before running auction-svc

  # search-svc:
  #   image: PuzzledSunrise/search-svc:latest
  #   build: 
  #     context: .
  #     dockerfile: src/SearchService/Dockerfile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_URLS=http://+:80
  #     - RabbitMq__Host=rabbitmq
  #     - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
  #     - AuctionServiceUrl=http://auction-svc
  #   ports:
  #     - 7002:80
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     mongodb:
  #       condition: service_healthy
  # identity-svc:
  #    image: PuzzledSunrise/identity-svc:latest
  #    build: 
  #      context: .
  #      dockerfile: src/IdentityService/Dockerfile
  #    environment:
  #      - ASPNETCORE_ENVIRONMENT=Docker
  #      - ASPNETCORE_URLS=http://+:80
  #      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=identity
  #    ports:
  #      - 5001:80
  #    depends_on:
  #      - postgres
  # gateway-svc:
  #    image: PuzzledSunrise/gateway-svc:latest
  #    build: 
  #      context: .
  #      dockerfile: src/GatewayService/Dockerfile
  #    environment:
  #      - ASPNETCORE_ENVIRONMENT=Docker
  #      - ASPNETCORE_URLS=http://+:80
  #    ports:
  #      - 6001:80


volumes:
  pgdata:
  mongodata:
